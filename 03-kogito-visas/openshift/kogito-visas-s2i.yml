kind: Template
apiVersion: v1
metadata:
  name: kogito-visas-s2i
objects:
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      build: ${APPLICATION_NAME}
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    failedBuildsHistoryLimit: 5
    output:
      to:
        kind: ImageStreamTag
        name: '${APPLICATION_NAME}:latest'
    runPolicy: Serial
    source:
      contextDir: '${GIT_CONTEXT_DIR}'
      git:
        uri: '${GIT_URL}'
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: ${BUILDER_IMAGE_IS}:${BUILDER_IMAGE_TAG}
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
      - type: ConfigChange
      - imageChange:
        type: ImageChange
    resources:
      limits:
        cpu: ${S2I_CPU_LIMIT}
        memory: ${S2I_MEMORY_LIMIT}
      requests:
        cpu: ${S2I_CPU_REQUEST}
        memory: ${S2I_MEMORY_LIMIT}
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      build: ${APPLICATION_NAME}
      app: ${APPLICATION_NAME}
    name: ${BUILDER_IMAGE_IS}
  spec:
    lookupPolicy:
      local: false
    tags:
      - from:
          kind: DockerImage
          name: ${BUILDER_IMAGE}
        importPolicy: {}
        name: ${BUILDER_IMAGE_TAG}
        referencePolicy:
          type: Source
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      build: ${APPLICATION_NAME}
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    lookupPolicy:
      local: false
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      build: ${APPLICATION_NAME}
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-runtime
  spec:
    failedBuildsHistoryLimit: 5
    output:
      to:
        kind: ImageStreamTag
        name: '${APPLICATION_NAME}-runtime:latest'
    runPolicy: Serial
    source:
      images:
        - from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}:latest
          paths:
            - sourcePath: /home/kogito/bin
              destinationDir: .
      type: Image
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: ${RUNTIME_IMAGE_IS}:${RUNTIME_IMAGE_TAG}
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
      - type: ConfigChange
      - imageChange:
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
        type: ImageChange
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      build: ${APPLICATION_NAME}
      app: ${APPLICATION_NAME}
    name: ${RUNTIME_IMAGE_IS}
  spec:
    lookupPolicy:
      local: false
    tags:
      - from:
          kind: DockerImage
          name: ${RUNTIME_IMAGE}
        importPolicy: {}
        name: ${RUNTIME_IMAGE_TAG}
        referencePolicy:
          type: Source
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      build: ${APPLICATION_NAME}
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-runtime
  spec:
    lookupPolicy:
      local: false
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
      expose: "true"
    name: ${APPLICATION_NAME}
  spec:
    ports:
      - name: http
        port: 8080
        protocol: TCP
        targetPort: 8080
    selector:
      deploymentconfig: ${APPLICATION_NAME}
      app: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
    wildcardPolicy: None
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      deploymentconfig: ${APPLICATION_NAME}
      app: ${APPLICATION_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 3600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          deploymentconfig: ${APPLICATION_NAME}
          app: ${APPLICATION_NAME}
      spec:
        containers:
          - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            imagePullPolicy: IfNotPresent
            name: ${APPLICATION_NAME}
            ports:
              - containerPort: 8080
                name: http
                protocol: TCP
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /health
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 10
              periodSeconds: 30
              timeoutSeconds: 3
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /health
                port: 8080
                scheme: HTTP
              initialDelaySeconds: 3
              periodSeconds: 10
              timeoutSeconds: 3
            resources:
              limits:
                cpu: ${CPU_LIMIT}
                memory: ${MEMORY_LIMIT}
              requests:
                cpu: ${CPU_REQUEST}
                memory: ${MEMORY_REQUEST}
            securityContext:
              privileged: false
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
              - mountPath: /home/kogito/config
                name: config
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
          - configMap:
              defaultMode: 420
              name: ${APPLICATION_CONFIGMAP}
            name: config
    triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
            - ${APPLICATION_NAME}
          from:
            kind: ImageStreamTag
            name: '${APPLICATION_NAME}-runtime:latest'
        type: ImageChange
parameters:
- description: The name for the application.
  name: APPLICATION_NAME
  required: true
  value: kogito-visas-s2i
- name: GIT_URL
  required: true
  value: https://github.com/rhte2019-kogito/kogito-travel-agency-tutorial.git
- name: GIT_CONTEXT_DIR
  required: true
  value: /03-kogito-visas
- name: BUILDER_IMAGE_IS
  required: true
  value: kogito-quarkus-ubi8-s2i
- name: BUILDER_IMAGE
  required: true
  value: quay.io/kiegroup/kogito-quarkus-ubi8-s2i
- name: BUILDER_IMAGE_TAG
  required: true
  value: '0.3.0'
- name: S2I_CPU_REQUEST
  required: true
  value: '1'
- name: S2I_CPU_LIMIT
  required: true
  value: '2'
- name: S2I_MEMORY_REQUEST
  required: true
  value: '6Gi'
- name: S2I_MEMORY_LIMIT
  required: true
  value: '8Gi'
- name: RUNTIME_IMAGE_IS
  required: true
  value: kogito-quarkus-ubi8
- name: RUNTIME_IMAGE
  required: true
  value: quay.io/kiegroup/kogito-quarkus-ubi8
- name: RUNTIME_IMAGE_TAG
  required: true
  value: '0.3.0'
- name: CPU_REQUEST
  required: true
  value: '0.1'
- name: CPU_LIMIT
  required: true
  value: '0.5'
- name: MEMORY_REQUEST
  required: true
  value: '100Mi'
- name: MEMORY_LIMIT
  required: true
  value: '300Mi'
- name: APPLICATION_CONFIGMAP
  required: true
  value: kogito-visas